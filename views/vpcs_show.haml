%nav{"aria-label" => "You are here:", :role => "navigation"}
  %ul.breadcrumbs
    %li
      %a{:href => "/"} VPCs

.callout
  %h4
    = @vpc.name
    %small
      %a{"data-open" => "json-#{@vpc.vid}"} resource.json
    .reveal{:id => "json-#{@vpc.vid}", "data-reveal" => ""}
      %button.close-button{"aria-label" => "Close modal", "data-close" => "", :type => "button"}
        %span{"aria-hidden" => "true"} ×
      %pre= JSON.pretty_generate(JSON.load(@vpc.resource_json))
  %p
    %span.label
      = @vpc.vid
    %span.label
      = @vpc.state
    %span.label.warning
      = @subnets.count
      Subnets
    %span.label.secondary
      = @vpc.instances.count
      Instances
    %span.label.secondary
      = @vpc.db_instances.count
      RDS Instances
  %p
    = @vpc.cidr_block

  .row.small-up-1.medium-up-2.large-up-3
    - @subnets.each do |subnet|
      .column
        .card
          .card-divider
            %h5
              = subnet.name
              %small
                %a{"data-open" => "json-#{subnet.sid}"} resource.json
              %small
                %a{:href => "https://#{aws_region}.console.aws.amazon.com/vpc/home?region=#{aws_region}#subnets:filter=#{subnet.sid}", :target => "_blank"}
                  %i.fi-link
            %span.label.warning
              = subnet.sid
            %span.label.warning
              = subnet.availability_zone
          .card-section
            %p
              = subnet.cidr_block
              \-
              = subnet.available_ip_address_count
              available IP addresses
            .reveal{:id => "json-#{subnet.sid}", "data-reveal" => ""}
              %button.close-button{"aria-label" => "Close modal", "data-close" => "", :type => "button"}
                %span{"aria-hidden" => "true"} ×
              %pre= JSON.pretty_generate(JSON.load(subnet.resource_json))
            %table.hover.unstriped
              %thead
                %tr
                  %th
                    Instances
                    %span.badge.secondary= subnet.instances.count
              %tbody
                - subnet.instances(:order => 'name').each do |instance|
                  %tr
                    %td
                      %a{:href => "/instances/#{instance.iid}"}= resource_name(instance.name)
                      %a{:href => "https://#{aws_region}.console.aws.amazon.com/ec2/v2/home?region=#{aws_region}#Instances:instanceId=#{instance.iid};sort=instanceState", :target => "_blank"}
                        %i.fi-link
                      %span.label.secondary= instance.instance_type
                      %span.label{:class => "#{class_for_state(instance.state)}"}
                        = instance.private_ip_address
                      - unless instance.public_ip_address.nil?
                        %span.label{:class => "#{class_for_state(instance.state)}"}
                          = instance.public_ip_address

  - if @subnets.empty?
    %p
      %i No subnets in VPC.
  - if @db_instances.any?
    %p
      %ul.menu
        %li
          = @db_instances.count
          RDS Instances
    %table.hover#db-instances
      %thead
        %tr
          %th Type
          %th Address
          %th Engine
          %th Availability zones
      %tbody
        - @db_instances.each do |db_instance|
          %tr
            %td
              %span.label.secondary= db_instance.db_instance_class
            %td
              = db_instance.address
              %a{:href => "https://#{aws_region}.console.aws.amazon.com/rds/home?region=#{aws_region}#dbinstance:id=#{db_instance.name}", :target => "_blank"}
                %i.fi-link

            %td= db_instance.engine
            %td
              %span.label.warning= db_instance.availability_zone
              - unless db_instance.secondary_availability_zone.nil?
                %span.label.warning= db_instance.secondary_availability_zone
